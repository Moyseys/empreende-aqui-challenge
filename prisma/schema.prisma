// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int    @id @default(autoincrement())
  name         String
  email        String @unique
  passwordHash String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account[]
}

enum AccountType {
  CURRENT
  SAVINGS
}

model Account {
  id     Int    @id @default(autoincrement())
  name   String
  type   String
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           Users      @relation(fields: [userId], references: [id])
  paymentOrigin  Payments[] @relation("paymentOrigin")
  paymentDestiny Payments[] @relation("paymentDestiny")
}

model Payments {
  id          Int      @id @default(autoincrement())
  value       Float
  date        DateTime
  description String

  accountIdOrigin  Int
  accountIdDestiny Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accountOrigin  Account         @relation("paymentOrigin", fields: [accountIdOrigin], references: [id])
  accountDestiny Account         @relation("paymentDestiny", fields: [accountIdDestiny], references: [id])
  imagePayment   ImagesPayments?
}

model ImagesPayments {
  id        Int    @id @default(autoincrement())
  url       String
  fileName  String
  paymentId Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  payment Payments @relation(fields: [paymentId], references: [id])
}
